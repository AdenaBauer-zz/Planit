/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.28
 * Generated at: 2015-11-22 08:21:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"utf-8\">\n");
      out.write("        <title>Planit | Dashboard</title>\n");
      out.write("        <link rel=\"stylesheet\" href=\"style.css\">\n");
      out.write("        <link href='https://fonts.googleapis.com/css?family=Lato:400,700,300' rel='stylesheet' type='text/css'>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("          // Your Client ID can be retrieved from your project in the Google\n");
      out.write("          // Developer Console, https://console.developers.google.com\n");
      out.write("          var CLIENT_ID = '538542431930-l6i37emfe92fmo4ol1n0ll6db4lceu88.apps.googleusercontent.com';\n");
      out.write("\n");
      out.write("          var SCOPES = [\"https://www.googleapis.com/auth/calendar.readonly\"];\n");
      out.write("\n");
      out.write("          /**\n");
      out.write("           * Check if current user has authorized this application.\n");
      out.write("           */\n");
      out.write("          function checkAuth() {\n");
      out.write("            gapi.auth.authorize(\n");
      out.write("              {\n");
      out.write("                'client_id': CLIENT_ID,\n");
      out.write("                'scope': SCOPES.join(' '),\n");
      out.write("                'immediate': true\n");
      out.write("              }, handleAuthResult);\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          /**\n");
      out.write("           * Handle response from authorization server.\n");
      out.write("           *\n");
      out.write("           * @param {Object} authResult Authorization result.\n");
      out.write("           */\n");
      out.write("          function handleAuthResult(authResult) {\n");
      out.write("            var authorizeDiv = document.getElementById('authorize-div');\n");
      out.write("            if (authResult && !authResult.error) {\n");
      out.write("              // Hide auth UI, then load client library.\n");
      out.write("              authorizeDiv.style.display = 'none';\n");
      out.write("              loadCalendarApi();\n");
      out.write("            } else {\n");
      out.write("              // Show auth UI, allowing the user to initiate authorization by\n");
      out.write("              // clicking authorize button.\n");
      out.write("              authorizeDiv.style.display = 'inline';\n");
      out.write("            }\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          /**\n");
      out.write("           * Initiate auth flow in response to user clicking authorize button.\n");
      out.write("           *\n");
      out.write("           * @param {Event} event Button click event.\n");
      out.write("           */\n");
      out.write("          function handleAuthClick(event) {\n");
      out.write("            gapi.auth.authorize(\n");
      out.write("              {client_id: CLIENT_ID, scope: SCOPES, immediate: false},\n");
      out.write("              handleAuthResult);\n");
      out.write("            return false;\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          /**\n");
      out.write("           * Load Google Calendar client library. List upcoming events\n");
      out.write("           * once client library is loaded.\n");
      out.write("           */\n");
      out.write("          function loadCalendarApi() {\n");
      out.write("            gapi.client.load('calendar', 'v3', unhideUiElements);\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          /**\n");
      out.write("           * Print the summary and start datetime/date of the next ten events in\n");
      out.write("           * the authorized user's calendar. If no events are found an\n");
      out.write("           * appropriate message is printed.\n");
      out.write("           */\n");
      out.write("\n");
      out.write("           function unhideUiElements() {\n");
      out.write("               $('.topbar').toggleClass(\"hidden\");\n");
      out.write("               $('#sidebar').toggleClass(\"hidden\");\n");
      out.write("               $('.container').toggleClass(\"hidden\");\n");
      out.write("               console.log(\"You are authorized.\");\n");
      out.write("               getSchedule();\n");
      out.write("           }\n");
      out.write("           function getSchedule() {\n");
      out.write("               var request = gapi.client.calendar.events.list({\n");
      out.write("                 'calendarId': 'primary',\n");
      out.write("                 'timeMin': \"2015-11-22T00:00:00.000Z\",\n");
      out.write("                 'showDeleted': false,\n");
      out.write("                 'singleEvents': true,\n");
      out.write("                 'maxResults': 80,\n");
      out.write("                 'orderBy': 'startTime'\n");
      out.write("               });\n");
      out.write("               var schedule = [];\n");
      out.write("               for(var j=0; j<7; j++){\n");
      out.write("                   schedule[j] = [];\n");
      out.write("                   for(var k=0; k<24; k++){\n");
      out.write("                       schedule[j][k] = 1;\n");
      out.write("                   }\n");
      out.write("               }\n");
      out.write("               request.execute(function(resp) {\n");
      out.write("                 var events = resp.items;\n");
      out.write("               //   appendPre('Upcoming events:');\n");
      out.write("                 var prevDay = 0;\n");
      out.write("                 if (events.length > 0) {\n");
      out.write("                   for (i = 0; i < events.length; i++) {\n");
      out.write("                     var event = events[i];\n");
      out.write("                     var dateObj = new Date(event.start.dateTime);\n");
      out.write("                     var day = dateObj.getDay();\n");
      out.write("                     console.log(event)\n");
      out.write("                     var starttime;\n");
      out.write("                     var endtime;\n");
      out.write("                     if(event.start.dateTime !== undefined){\n");
      out.write("                         starttime = parseInt(event.start.dateTime.substring(11,13));\n");
      out.write("                         endtime = parseInt(event.end.dateTime.substring(11,13));\n");
      out.write("                         if(parseInt(event.end.dateTime[14]) == 0){\n");
      out.write("                             endtime--;\n");
      out.write("                         }\n");
      out.write("                     }\n");
      out.write("                     else {\n");
      out.write("                       starttime = 0;\n");
      out.write("                       endtime = 23;  \n");
      out.write("                     }\n");
      out.write("                     if(prevDay <= day){\n");
      out.write("                         for(var j=starttime; j<=endtime; j++){\n");
      out.write("                           schedule[day][j] = 0;\n");
      out.write("                         }\n");
      out.write("                       //   appendPre(event.summary + ' (' + \"time: \" + starttime + \" - \" + endtime + \" day: \" + day + ')');\n");
      out.write("                         prevDay = day;\n");
      out.write("                     }\n");
      out.write("                     else {\n");
      out.write("                         break;\n");
      out.write("                     }\n");
      out.write("                   }\n");
      out.write("                   var scheduleString = \"\";\n");
      out.write("                   for(var j=0; j<7; j++){\n");
      out.write("                       for(var k=0; k<24; k++){\n");
      out.write("                           scheduleString += schedule[j][k];\n");
      out.write("                       }\n");
      out.write("                   }\n");
      out.write("                   console.log(scheduleString);\n");
      out.write("                 } else {\n");
      out.write("                   // appendPre('No upcoming events found.');\n");
      out.write("                   alert('No upcoming events found.');\n");
      out.write("                 }\n");
      out.write("               });\n");
      out.write("             }\n");
      out.write("\n");
      out.write("          function listUpcomingEvents() {\n");
      out.write("            var request = gapi.client.calendar.events.list({\n");
      out.write("              'calendarId': 'primary',\n");
      out.write("              'timeMin': (new Date()).toISOString(),\n");
      out.write("              'showDeleted': false,\n");
      out.write("              'singleEvents': true,\n");
      out.write("              'maxResults': 10,\n");
      out.write("              'orderBy': 'startTime'\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            request.execute(function(resp) {\n");
      out.write("              var events = resp.items;\n");
      out.write("              appendPre('Upcoming events:');\n");
      out.write("\n");
      out.write("              if (events.length > 0) {\n");
      out.write("                for (i = 0; i < events.length; i++) {\n");
      out.write("                  var event = events[i];\n");
      out.write("                  var when = event.start.dateTime;\n");
      out.write("                  if (!when) {\n");
      out.write("                    when = event.start.date;\n");
      out.write("                  }\n");
      out.write("                  appendPre(event.summary + ' (' + when + ')')\n");
      out.write("                }\n");
      out.write("              } else {\n");
      out.write("                appendPre('No upcoming events found.');\n");
      out.write("              }\n");
      out.write("\n");
      out.write("            });\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          /**\n");
      out.write("           * Append a pre element to the body containing the given message\n");
      out.write("           * as its text node.\n");
      out.write("           *\n");
      out.write("           * @param {string} message Text to be placed in pre element.\n");
      out.write("           */\n");
      out.write("          function appendPre(message) {\n");
      out.write("            var pre = document.getElementById('output');\n");
      out.write("            var textContent = document.createTextNode(message + '\\n');\n");
      out.write("            pre.appendChild(textContent);\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          function addOrganization() {\n");
      out.write("            if($('#org-name-input').val().length > 0){\n");
      out.write("            \tvar orgdata = {\n");
      out.write("            \t\t\t\"orgName\": $('#org-name-input').val(),\n");
      out.write("            \t\t\t\"nameCreatorID\": \"17\"\n");
      out.write("            \t};\n");
      out.write("            \t\n");
      out.write("            \tvar posting = $.post( 'http://localhost:8080/Planit/addOrganization', JSON.stringify(orgdata));\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tposting.done( function( data ) {\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tconsole.log(\"POST\" + data);\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t  \tif(data.length > 1) {\n");
      out.write("\t\t\t\t  \t\t $('#sidebar').append(\"<div id='4' class='organization'>\" + $('#org-name-input').val() + \"</div>\");\n");
      out.write("\t\t\t\t  \t}\n");
      out.write("\t\t\t\t  \t\n");
      out.write("\t\t\t\t});\n");
      out.write("            }\n");
      out.write("          }\n");
      out.write("\n");
      out.write("          function addOrganizationTemp() {\n");
      out.write("              if($('#org-name-input').val().length > 0){\n");
      out.write("                    $('#sidebar').append(\"<div id='4' class='organization'>\" + $('#org-name-input').val() + \"</div>\");\n");
      out.write("                  }\n");
      out.write("          }\n");
      out.write("        </script>\n");
      out.write("        <script src=\"https://apis.google.com/js/client.js?onload=checkAuth\">\n");
      out.write("        </script>\n");
      out.write("    </head>\n");
      out.write("\n");
      out.write("    <body>\n");
      out.write("        <div id=\"authorize-div\" style=\"display: none\">\n");
      out.write("         <img src=\"Planit.png\"/>\n");
      out.write("         <!--Button for the user to click to initiate auth sequence -->\n");
      out.write("         <button id=\"authorize-button\" onclick=\"handleAuthClick(event)\">\n");
      out.write("           Login\n");
      out.write("         </button>\n");
      out.write("        </div>\n");
      out.write("        <pre id=\"output\"></pre>\n");
      out.write("        <div class=\"topbar hidden\">\n");
      out.write("            <div class=\"logo\"></div>\n");
      out.write("            <div id=\"profile-link\">Profile</div>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"sidebar\" class=\"hidden\">\n");
      out.write("            <div id=\"organizations\">\n");
      out.write("                <div id=\"1\" class=\"organization org-selected\">\n");
      out.write("                    Spark SC\n");
      out.write("                </div>\n");
      out.write("                <!-- Additional Orgs -->\n");
      out.write("                <div id=\"2\" class=\"organization\">\n");
      out.write("                    USC Hackers\n");
      out.write("                </div>\n");
      out.write("                <div id=\"3\" class=\"organization\">\n");
      out.write("                    Spark Media\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <div id=\"new-org\">\n");
      out.write("                + Organization\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"container hidden\">\n");
      out.write("            <div class=\"main\">\n");
      out.write("                <div id=\"invites\">\n");
      out.write("                    <div class=\"invite\">\n");
      out.write("                        <div class=\"invite-title\">\n");
      out.write("                            Invite Title\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"invite-deadline\">\n");
      out.write("                            Deadline\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"opt-buttons\">\n");
      out.write("                            <div class=\"opt-out\">\n");
      out.write("                                Opt-Out\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"opt-in\">\n");
      out.write("                                Opt-In\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <!-- Additional Invites -->\n");
      out.write("                    <div class=\"invite\">\n");
      out.write("                        <div class=\"invite-title\">\n");
      out.write("                            Invite Title\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"invite-deadline\">\n");
      out.write("                            Deadline\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"opt-buttons\">\n");
      out.write("                            <div class=\"opt-out\">\n");
      out.write("                                Opt-Out\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"opt-in\">\n");
      out.write("                                Opt-In\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"invite\">\n");
      out.write("                        <div class=\"invite-title\">\n");
      out.write("                            Invite Title\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"invite-deadline\">\n");
      out.write("                            Deadline\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"opt-buttons\">\n");
      out.write("                            <div class=\"opt-out\">\n");
      out.write("                                Opt-Out\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"opt-in\">\n");
      out.write("                                Opt-In\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div id=\"new-invite\">\n");
      out.write("                        + Invite\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <div id=\"nom\" class=\"modal hidden\">\n");
      out.write("                <div id=\"new-org-modal\">\n");
      out.write("                    <div class=\"modal-instructions\">\n");
      out.write("                        Enter organization name:\n");
      out.write("                    </div>\n");
      out.write("                    <input id=\"org-name-input\" type=\"text\" class=\"modal-text\" placeholder=\"Organization Name\">\n");
      out.write("                    <div class=\"modal-instructions\">\n");
      out.write("                        Enter member emails (separated by spaces):\n");
      out.write("                    </div>\n");
      out.write("                    <input type=\"text\" class=\"modal-text\" placeholder=\"Email Addresses\">\n");
      out.write("                    <br>\n");
      out.write("                    <div id=\"new-org-cancel\" class=\"modal-button\">\n");
      out.write("                        Cancel\n");
      out.write("                    </div>\n");
      out.write("                    <div id=\"new-org-confirm\" class=\"modal-button\">\n");
      out.write("                        Confirm\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <div id=\"nim\" class=\"modal hidden\">\n");
      out.write("                <div id=\"new-invite-modal\">\n");
      out.write("                    <div class=\"modal-instructions\">\n");
      out.write("                        Enter invite name:\n");
      out.write("                    </div>\n");
      out.write("                    <input type=\"text\" class=\"modal-text\" placeholder=\"Organization Name\">\n");
      out.write("                    <div class=\"modal-instructions\">\n");
      out.write("                        Enter invite deadline:\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"mdy-month\">\n");
      out.write("                        Month:\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"mdy-day\">\n");
      out.write("                        Day:\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"mdy-year\">\n");
      out.write("                        Year:\n");
      out.write("                    </div>\n");
      out.write("                    <br>\n");
      out.write("                    <input class=\"date-combo\" type=text list=months>\n");
      out.write("                    <select id=months>\n");
      out.write("                       <option> 1\n");
      out.write("                       <option> 2\n");
      out.write("                       <option> 3\n");
      out.write("                       <option> 4\n");
      out.write("                       <option> 5\n");
      out.write("                       <option> 6\n");
      out.write("                       <option> 7\n");
      out.write("                       <option> 8\n");
      out.write("                       <option> 9\n");
      out.write("                       <option> 10\n");
      out.write("                       <option> 11\n");
      out.write("                       <option> 12\n");
      out.write("                    </select>\n");
      out.write("                    <input class=\"date-combo\" type=text list=days>\n");
      out.write("                    <select id=days>\n");
      out.write("                       <option> 1\n");
      out.write("                       <option> 2\n");
      out.write("                       <option> 3\n");
      out.write("                       <option> 4\n");
      out.write("                       <option> 5\n");
      out.write("                       <option> 6\n");
      out.write("                       <option> 7\n");
      out.write("                       <option> 8\n");
      out.write("                       <option> 9\n");
      out.write("                       <option> 10\n");
      out.write("                       <option> 11\n");
      out.write("                       <option> 12\n");
      out.write("                       <option> 13\n");
      out.write("                       <option> 14\n");
      out.write("                       <option> 15\n");
      out.write("                       <option> 16\n");
      out.write("                       <option> 17\n");
      out.write("                       <option> 18\n");
      out.write("                       <option> 19\n");
      out.write("                       <option> 20\n");
      out.write("                       <option> 21\n");
      out.write("                       <option> 22\n");
      out.write("                       <option> 23\n");
      out.write("                       <option> 24\n");
      out.write("                       <option> 25\n");
      out.write("                       <option> 26\n");
      out.write("                       <option> 27\n");
      out.write("                       <option> 28\n");
      out.write("                       <option> 29\n");
      out.write("                       <option> 30\n");
      out.write("                       <option> 31\n");
      out.write("                    </select>\n");
      out.write("                    <input class=\"date-combo\" type=text list=years>\n");
      out.write("                    <select id=years>\n");
      out.write("                       <option> 2015\n");
      out.write("                       <option> 2016\n");
      out.write("                       <option> 2017\n");
      out.write("                       <option> 2018\n");
      out.write("                       <option> 2019\n");
      out.write("                       <option> 2020\n");
      out.write("                       <option> 2021\n");
      out.write("                       <option> 2022\n");
      out.write("                       <option> 2023\n");
      out.write("                       <option> 2024\n");
      out.write("                       <option> 2025\n");
      out.write("                       <option> 2026\n");
      out.write("                    </select>\n");
      out.write("                    <br>\n");
      out.write("                    <div id=\"new-invite-cancel\" class=\"modal-button\">\n");
      out.write("                        Cancel\n");
      out.write("                    </div>\n");
      out.write("                    <div id=\"new-invite-confirm\" class=\"modal-button\">\n");
      out.write("                        Confirm\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <script src=\"jquery-2.1.4.min.js\"></script>\n");
      out.write("        <script src=\"main.js\"></script>\n");
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
