package servlet;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import sql.MySQLDriver;

/**
 * Servlet implementation class clickOrganization
 */
@WebServlet("/clickOrganization")
public class clickOrganization extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
			response.setContentType("application/json");
			JSONObject object = translateToJSON(request);
			System.out.println(object);
			JSONArray elements = object.names();
			try {
				object = new JSONObject(elements.getString(0));
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			String idOrganization = "";
			try {
				idOrganization = object.getString("idOrganization");
			} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			}
			System.out.println(idOrganizationString);
			int idOrganization = Integer.parseInt(idOrganizationString);
			//int meetingID = 1;
			PrintWriter out = response.getWriter();
			MySQLDriver msql = new MySQLDriver();
			msql.connect();
			System.out.println("connected");
			ResultSet rs = msql.getMeetings(idOrganization);
		    int i = 0;
			JSONArray meetings = new JSONArray();
			try {
				while (rs.next()) {
					String name = rs.getString("meetingName");
				    String deadl = rs.getString("deadline");
				    String idMeeting = rs.getString("idMeeting");
				    
					String comparableDate = deadl.substring(0, 3) + deadl.substring(5, 6) + deadl.substring(8, 9);   	
					int meetingDateInt = Integer.parseInt(comparableDate);
					Calendar currentDate = Calendar.getInstance(); //Get the current date
					SimpleDateFormat formatter= new SimpleDateFormat("yyyyMMdd"); //format it as per your requirement
					String dateNow = formatter.format(currentDate.getTime());
					int dateNowInt = Integer.parseInt(dateNow);
					    
					if(dateNowInt > meetingDateInt){
					    	msql.deleteMeeting(Integer.parseInt(idMeeting));
					}
			    
					JSONObject orgName = new JSONObject();
					orgName.put("meetingName", rs.getString("nameOrganization"));
					orgName.put("deadline", rs.getString("idOrganization"));
					orgName.put("idMeeting", rs.getString("idMeeting"));
					meetings.put(i, orgName);
					i++;
				}
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			} catch (JSONException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			
			
			JSONObject obj = new JSONObject();
			try {
				obj.put("meetings", meetings);
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
			out.print(obj);
			out.flush();
	}	
	public JSONObject translateToJSON(HttpServletRequest request) {
		  JSONObject newObject = new JSONObject();
		  Map<String,String[]> parameterMap = request.getParameterMap();
		  Iterator<Map.Entry<String,String[]>> mapIt = parameterMap.entrySet().iterator();
		  
		  while(mapIt.hasNext()) {
			  Map.Entry<String,String[]> curr = mapIt.next();
			  String [] result = curr.getValue();
			  if(result.length != 1) {
				  Object addObject = result;
				  try {
					newObject.put(curr.getKey(), addObject);
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			  } else {
				  Object addObject = result[0];
				  try {
					newObject.put(curr.getKey(), addObject);
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			  }
		  }
		  return newObject;
	}
		

}
